#
# Copyright (c) 2023 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing permissions and limitations under the
# License.
#

openapi: "3.0.0"

info:
  title: O2 IMS
  version: 1.0.0
  description: |
    O-RAN O2 IMS
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
- url: http://localhost:8000

tags:
- name: deploymentManagers
  description: |
    Information about deployment managers.
- name: metadata
  description: |
    Service metadata, including versions and O-Cloud information.
- name: resourceTypes
  description: |
    Information about resource types.
- name: resourcePools
  description: |
    Information about resource pools.
- name: resources
  description: |
    Information about resources.
- name: alarms
  description: |
    Information about alarms.

paths:

  /o2ims-infrastructureInventory/api_versions:
    get:
      operationId: getAllVersions
      summary: Get API versions
      description: |
        Returns the complete list of API versions implemented by the service.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      tags:
      - metadata
      responses:
        '200':
          description: |
            Successfully obtaiend the complete list of versions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIVersions"

  /o2ims-infrastructureInventory/v1:
    get:
      operationId: getCloudInfo
      summary: Get O-Cloud info
      description: |
        Returns the details of the O-Cloud instance.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      tags:
      - metadata
      responses:
        '200':
          description: |
            Successfully obtained the details of the O-Cloud instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OCloudInfo"

  /o2ims-infrastructureInventory/{version}/api_versions:
    get:
      operationId: getMinorVersions
      summary: Get minor API versions
      description: |
        Returns the list of minor API versions implemented for this major version of the API.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/version"
      tags:
      - metadata
      responses:
        '200':
          description: |
            Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIVersions"

  /o2ims-infrastructureInventory/{version}/deploymentManagers:
    get:
      operationId: getDeploymentManagers
      summary: Get deployment managers
      description: |
        Returns the list of deployment managers.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/filter"
      - $ref: "#/components/parameters/version"
      tags:
      - deploymentManagers
      responses:
        '200':
          description: |
            Successfully obtained the list of deployment managers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentManagers"

  /o2ims-infrastructureInventory/{version}/deploymentManagers/{deploymentManagerId}:
    get:
      operationId: getDeploymentManager
      summary: Get deployment manager
      description: |
        Returns the details of a deployment manager.
      parameters:
      - $ref: "#/components/parameters/deploymentManagerId"
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/version"
      tags:
      - deploymentManagers
      responses:
        '200':
          description: |
            Successfully obtained the details of the deployment manager.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentManagers"

  /o2ims-infrastructureInventory/{version}/resourceTypes:
    get:
      operationId: getResourceTypes
      summary: Get resource types
      description: |
        Returns the list of resource types.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/filter"
      - $ref: "#/components/parameters/version"
      tags:
      - resourceTypes
      responses:
        '200':
          description: |
            Successfully obtained the list of resource types.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceTypes"

  /o2ims-infrastructureInventory/{version}/resourceTypes/{resourceTypeId}:
    get:
      operationId: getResourceType
      summary: Get a resource type
      description: |
        Returns the details of a resource type.
      parameters:
      - $ref: "#/components/parameters/resourceTypeId"
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/version"
      tags:
      - resourceTypes
      responses:
        '200':
          description: |
            Successfully obtained the details of the resource type.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceType"

  /o2ims-infrastructureInventory/{version}/resourcePools:
    get:
      operationId: getResourcePools
      summary: Get resource pools
      description: |
        Returns the list of resource pools.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/filter"
      - $ref: "#/components/parameters/version"
      tags:
      - resourcePools
      responses:
        '200':
          description: |
            Successfully obtained the list of resource pools.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePools"

  /o2ims-infrastructureInventory/{version}/resourcePools/{resourcePoolId}:
    get:
      operationId: getResourcePool
      summary: Get a resource pool
      description: |
        Returns the details of a resource pool.
      parameters:
      - $ref: "#/components/parameters/resourcePoolId"
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/version"
      tags:
      - resourcePools
      responses:
        '200':
          description: |
            Successfully obtained the details of the resource pool.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePool"

  /o2ims-infrastructureInventory/{version}/resourcePools/{resourcePoolId}/resources:
    get:
      operationId: getResources
      summary: Get resources in a resource pool
      description: |
        Returns the details of resources in a resource pool.
      parameters:
      - $ref: "#/components/parameters/resourcePoolId"
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/filter"
      - $ref: "#/components/parameters/version"
      tags:
      - resources
      responses:
        '200':
          description: |
            Successfully obtained the list of resources.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resources"

  /o2ims-infrastructureInventory/{version}/resourcePools/{resourcePoolId}/resources/{resourceId}:
    get:
      operationId: getResource
      summary: Get a resource in a resource pool
      description: |
        Returns the details of a resource in a resource pool.
      parameters:
      - $ref: "#/components/parameters/resourcePoolId"
      - $ref: "#/components/parameters/resourceId"
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/version"
      tags:
      - resources
      responses:
        '200':
          description: |
            Successfully obtained the details of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"

  /o2ims-infrastructureMonitoring/{version}/alarms:
    get:
      operationId: getAlarms
      summary: Get alarms
      description: |
        Returns the list of AlarmEventRecords.
      parameters:
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/filter"
      - $ref: "#/components/parameters/version"
      tags:
      - alrams
      responses:
        '200':
          description: |
            Successfully obtained the list of alarms.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alarms"

  /o2ims-infrastructureMonitoring/{version}/alarms/{alarmEventRecordId}:
    get:
      operationId: getAlarm
      summary: Get an alarm
      description: |
        Returns the details of an AlarmEventRecord.
      parameters:
      - $ref: "#/components/parameters/alarmEventRecordId"
      - $ref: "#/components/parameters/excludeFields"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/version"
      tags:
      - alarms
      responses:
        '200':
          description: |
            Successfully obtained the details of the alarm.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alarm"

components:

  parameters:

    version:
      name: version
      description: |
        Major version number of the API, with a `v` prefix, for example `v1`.
      in: path
      required: true
      schema:
        type: string
      example: v1

    deploymentManagerId:
      name: deploymentManagerId
      description: |
        Unique identifier of a deployment manager.
      in: path
      required: true
      schema:
        type: string
      example: 65221564-8b05-416a-bfc3-c250bc64e1aa

    resourcePoolId:
      name: resourcePoolId
      description: |
        Unique identifier of a resource pool.
      in: path
      required: true
      schema:
        type: string
      example: 38dcb63b-b1f0-4d2c-88bf-56446670ef01

    resourceId:
      name: resourceId
      description: |
        Unique identifier of a resource.
      in: path
      required: true
      schema:
        type: string
      example: 38dcb63b-b1f0-4d2c-88bf-56446670ef01

    resourceTypeId:
      name: resourceTypeId
      description: |
        Unique identifier of a resource type.
      in: path
      required: true
      schema:
        type: string
      example: node_8_cores_amd64

    alarmEventRecordId:
      name: alarmEventRecordId
      description: |
        Unique identifier of an AlarmEventRecord.
      in: path
      required: true
      schema:
        type: string
      example: ClusterNotUpgradeable_spoke1

    fields:
      name: fields
      description: |
        Comma separated list of field references to include in the result.

        Each field reference is a field name, or a sequence of field names separated by slashes. For
        example, to get the `name` field and the `country` subfield of the `extensions` field:

        ```
        fields=name,extensions/country
        ```

        When this parameter isn't used all the fields will be returned.
      in: query
      required: false
      schema:
        type: string
      example: "name,extensions/country"

    excludeFields:
      name: exclude_fields
      description: |
        Comma separated list of field references to exclude from the result.

        Each field reference is a field name, or a sequence of field names separated by slashes. For
        example, to exclude the `country` subfield of the `extensions` field:

        ```
        exclude_fields=extensions/country
        ```

        When this parameter isn't used no field will be excluded.

        Fields in this list will be excluded even if they are explicitly included using the
        `fields` parameter.
      in: query
      required: false
      schema:
        type: string
      example: "name,extensions/country"

    filter:
      name: filter
      description: |
        Search criteria.

        Contains one or more search criteria, separated by semicolons. Each search criteria is a
        tuple containing an operator, a field reference and one or more values. The operator can
        be any of the following strings:

        | Operator | Meaning                                                     |
        |----------|-------------------------------------------------------------|
        | `cont`   | Matches if the field contains the value                     |
        | `eq`     | Matches if the field is equal to the value                  |
        | `gt`     | Matches if the field is greater than the value              |
        | `gte`    | Matches if the field is greater than or equal to the value  |
        | `in`     | Matches if the field is one of the values                   |
        | `lt`     | Matches if the field is less than the value                 |
        | `lte`    | Matches if the field is less than or equal to the the value |
        | `ncont`  | Matches if the field does not contain the value             |
        | `neq`    | Matches if the field is not equal to the value              |
        | `nin`    | Matches if the field is not one of the values               |

        The field reference is the name of one of the fields of the object, or a sequence of
        name of fields separated by slashes. For example, to use the `country` sub-field inside
        the `extensions` field:

        ```
        filter=(eq,extensions/country,EQ)
        ```

        The values are the arguments of the operator. For example, the `eq` operator compares
        checks if the value of the field is equal to the value.

        The `in` and `nin` operators support multiple values. For example, to check if the `country`
        sub-field inside the `extensions` field is either `ES` or `US:

        ```
        filter=(in,extensions/country,ES,US)
        ```

        When values contain commas, slashes or spaces they need to be surrounded by single quotes.
        For examplle, to check if the `name` field is the string `my cluster`:

        ```
        filter=(eq,name,'my cluster')
        ```

        When multiple criteria separated by semicolons are used, all of them must match for the
        complete condition to match. For example, the following will check if the `name` is
        `my cluster` *and* the `country` extension is `ES`:

        ```
        filter=(eq,name,'my cluster');(eq,extensions/country,ES)
        ```

        When this parameter isn't used all the results will be returned.
      in: query
      required: false
      schema:
        type: string
      example: "(eq,name,my cluster)"

  schemas:

    APIVersion:
      description: |
        Information about a version of the API.
      type: object
      properties:
        version:
          type: string
          example: "1.0.0"

    APIVersions:
      description: |
        Information about a list of versions of the API.
      type: object
      properties:
        uriPrefix:
          type: string
          example: "/o2ims-infrastructureInventory/v1"
        apiVersions:
          type: array
          items:
            $ref: "#/components/schemas/APIVersion"
          example:
          - version: "1.0.0"

    DeploymentManager:
      description: |
        Information about a deployment manager.
      type: object
      properties:
        deploymentManagerId:
          type: string
          example: "65221564-8b05-416a-bfc3-c250bc64e1aa"
        description:
          type: string
          example: "My cluster"
        oCloudId:
          type: string
          example: "262c8f17-52b5-4614-9e56-812ae21fa8a7"
        serviceUri:
          type: string
          example: "https://my.cluster:6443"

    DeploymentManagers:
      description: |
        List of deployment managers.
      type: array
      items:
        $ref: "#/components/schemas/DeploymentManager"

    OCloudInfo:
      type: object
      properties:
        oCloudId:
          type: string
          example: "262c8f17-52b5-4614-9e56-812ae21fa8a7"
        globalCloudId:
          type: string
          example: "8c1c151d-2899-4c96-b76f-4fe92064b57b"
        name:
          type: string
          example: "my-cloud"
        description:
          type: string
          example: "My cloud"
        serviceUri:
          type: string
          example: "http://localhost:8000"
        extensions:
          type: object
          example:
            hub: "hub0"
            country: "ES"

    ResourceType:
      description: |
        Information about a resource type.
      type: object
      properties:
        resourceTypeId:
          type: string
          example: "node_8_cores_amd64"
        name:
          type: string
          example: "medium"
        resourceKind:
          type: string
          example: "PHYSICAL"
        resourceClass:
          type: string
          example: "COMPUTE"
        alarmDictionary:
          type: object
          example:
            alarmDictionaryVersion: "v1"
            managementInterfaceId: "O2IMS"
            alarmDefinition: [
              {
                "alarmName": "Host is running out of memory.",
                "alarmDescription": "Memory is filling up, has been above memory high utilization threshold for the last 15 minutes",
                "proposedRepairActions": "",
                "managementInterfaceId": "O2IMS",
                "pkNotificationField": "alarmDefinitionID",
                "alarmAdditionalFields": {
                  "resourceClass": "COMPUTE"
                },
                "alarmDefinitionId": "NodeMemoryHighUtilization"
              }
            ]

    ResourceTypes:
      description: |
        List of resource types.
      type: array
      items:
        $ref: "#/components/schemas/ResourceType"

    ResourcePool:
      description: |
        Information about a resource pool.
      type: object
      properties:
        resourcePoolId:
          type: string
          example: "my-cluster"
        name:
          type: string
          example: "my-cluster"
        oCloudId:
          type: string
          example: "262c8f17-52b5-4614-9e56-812ae21fa8a7"
        location:
          type: string
          example: "EU"

    ResourcePools:
      description: |
        List of resource pools.
      type: array
      items:
        $ref: "#/components/schemas/ResourcePool"

    Resource:
      description: |
        Information about a resource.
      type: object
      properties:
        resourcePoolId:
          type: string
          example: "my-cluster"
        description:
          type: string
          example: "my-node"
        resourceTypeId:
          type: string
          example: "node_8_cores_amd64"
        resourceID:
          type: string
          example: "7c757ebe-559f-450a-9c87-32fc45af7a38"
        globalAssetId:
          type: string
          example: "b6f67c72-8915-474b-b369-6198ea1f7b6f"

    Resources:
      description: |
        List of resources.
      type: array
      items:
        $ref: "#/components/schemas/Resources"

    Alarm:
      description: |
        Information about an AlarmEventRecord.
      type: object
      properties:
        alarmEventRecordId:
          type: string
          example: "ClusterNotUpgradeable_spoke1"
        resourceID:
          type: string
          example: "my-node"
        resourceTypeId:
          type: string
          example: "node_8_cores_amd64"
        alarmRaisedTime:
          type: string
          example: "2024-03-10T13:21:33.613Z"
        alarmChangedTime:
          type: string
          example: "2024-03-14T12:18:35.487Z"
        alarmDefinitionID:
          type: string
          example: "ClusterNotUpgradeable"
        probableCauseID:
          type: string
          example: "ClusterNotUpgradeable"
        perceivedSeverity:
          type: string
          example: "info"
        extensions:
          type: object
          example:
            cluster: "spoke0"

    Alarms:
      description: |
        List of alarms.
      type: array
      items:
        $ref: "#/components/schemas/Alarms"
